from __future__ import division
import sys
from math import *
from PyQt4.QtCore import *
from PyQt4.QtGui import *
import socket
import threading
 
class Form(QDialog):
 
    def __init__(self, parent=None):
        super(Form, self).__init__(parent)
        self.label_IP = QLabel("Server IP: ")
        self.serverIP = QLineEdit("114.55.107.181")
        self.label_name = QLabel("nickname ")
        self.nickname = QLineEdit("leon")
        self.connectServer = QPushButton("connect")
        self.browser = QTextBrowser()
        self.msg_send = QLineEdit("")
        self.send = QPushButton("send")
        self.inString = ""
        self.outString = ""
        self.newString = ""
        self.thin = ""
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
        self.isConnected = 0
         
        layout = QVBoxLayout()
        layout.addWidget(self.label_IP)
        layout.addWidget(self.serverIP)
        layout.addWidget(self.label_name)
        layout.addWidget(self.nickname)
        layout.addWidget(self.connectServer)
        layout.addWidget(self.browser)
        layout.addWidget(self.msg_send)
        layout.addWidget(self.send)
        self.setLayout(layout)
          
        #self.connect(self.send, SIGNAL(clicked()), self.updateUi)
        self.send.clicked.connect(self.messageOut)
        self.connectServer.clicked.connect(self.connectToServer)
        self.setWindowTitle("QChat Client by Leon")
        self.browser.append("initialized")  
 
    def updateUi(self):
        try:           
            self.browser.append(self.newString)
        except:
            self.browser.append("error" )    
 
    def connectToServer(self):
        self.sock.connect((unicode(self.serverIP.text()), 8888))
        self.sock.send(unicode(self.nickname.text())) 
        self.thin = threading.Thread(target = self.messageIn, args = (self.sock,))
        self.thin.start()
        self.browser.append("connected")  
        self.isConnected = 1
        #thout = threading.Thread(target = self.messageOut(), args = (self.sock,))
        #thout.start()
     
    def messageOut(self):
        self.outString = unicode(self.msg_send.text())    
        self.outString = unicode(self.nickname.text())  + " : " + self.outString
        self.sock.send(self.outString)
        self.newString = self.outString
        self.updateUi()
     
    def messageIn(self):      
        while True:
            try:
                self.inString =  unicode(self.sock.recv(1024))
                if not self.inString:
                    break
                if self.outString != self.inString:
                    newString = inString
                    #self.updateUi()
                    self.browser.append(self.inString)  
            except:
                break
                 
                               
app = QApplication(sys.argv)
form = Form()
form.show()
app.exec_()
#form.thin = threading.Thread(target = form.messageIn, args = (form.sock,))
#form.thin.start()
